{"ast":null,"code":"var _jsxFileName = \"/Users/sohannath/Developer/Event-manager/client/src/components/ListTasks.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nconst ListTasks = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all tasks from the backend\n  const getTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/tasks\");\n      const jsonData = await response.json();\n\n      // Check if tasks exist in the response\n      if (jsonData.tasks) {\n        setTasks(jsonData.tasks);\n      } else {\n        console.error(\"Error fetching tasks:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err.message);\n    }\n  };\n\n  // Update task status to \"Completed\"\n  const updateTaskStatus = async taskId => {\n    try {\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          status: \"Completed\" // Setting the status to \"Completed\"\n        })\n      });\n      const jsonData = await response.json();\n      if (response.ok) {\n        // Update the status locally after successful update\n        setTasks(tasks.map(task => task.id === taskId ? {\n          ...task,\n          status: \"Completed\"\n        } : task));\n      } else {\n        console.error(\"Error updating task status:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error updating task status:\", err.message);\n    }\n  };\n  useEffect(() => {\n    getTasks(); // Fetch tasks on component mount\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"List of Tasks\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 15\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 15\n    }\n  }, \"Update Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }\n  }, tasks.length > 0 ? tasks.map(task => /*#__PURE__*/React.createElement(\"tr\", {\n    key: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 19\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 19\n    }\n  }, task.event_name || \"No Event\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 19\n    }\n  }, task.attendee_name || \"No Attendee\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 19\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 19\n    }\n  }, task.status === \"Pending\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => updateTaskStatus(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 23\n    }\n  }, \"Mark as Complete\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 23\n    }\n  }, \"Completed\")))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"No tasks available\"))))));\n};\nexport default ListTasks;","map":{"version":3,"names":["React","Fragment","useEffect","useState","ListTasks","tasks","setTasks","getTasks","response","fetch","jsonData","json","console","error","err","message","updateTaskStatus","taskId","method","headers","body","JSON","stringify","status","ok","map","task","id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","length","key","name","description","event_name","attendee_name","onClick","colSpan"],"sources":["/Users/sohannath/Developer/Event-manager/client/src/components/ListTasks.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nconst ListTasks = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all tasks from the backend\n  const getTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/tasks\");\n      const jsonData = await response.json();\n\n      // Check if tasks exist in the response\n      if (jsonData.tasks) {\n        setTasks(jsonData.tasks);\n      } else {\n        console.error(\"Error fetching tasks:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err.message);\n    }\n  };\n\n  // Update task status to \"Completed\"\n  const updateTaskStatus = async (taskId) => {\n    try {\n      const response = await fetch(`http://localhost:4000/tasks/${taskId}`, {\n        method: \"PUT\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({\n          status: \"Completed\", // Setting the status to \"Completed\"\n        }),\n      });\n\n      const jsonData = await response.json();\n\n      if (response.ok) {\n        // Update the status locally after successful update\n        setTasks(\n          tasks.map((task) =>\n            task.id === taskId ? { ...task, status: \"Completed\" } : task\n          )\n        );\n      } else {\n        console.error(\"Error updating task status:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error updating task status:\", err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTasks(); // Fetch tasks on component mount\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <h2 className=\"text-center mt-5\">List of Tasks</h2>\n\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Task Name</th>\n              <th>Description</th>\n              <th>Event</th>\n              <th>Assigned To</th>\n              <th>Status</th>\n              <th>Update Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.length > 0 ? (\n              tasks.map((task) => (\n                <tr key={task.id}>\n                  <td>{task.name}</td>\n                  <td>{task.description}</td>\n                  <td>{task.event_name || \"No Event\"}</td>\n                  <td>{task.attendee_name || \"No Attendee\"}</td>\n                  <td>{task.status}</td>\n                  <td>\n                    {task.status === \"Pending\" ? (\n                      <button\n                        className=\"btn btn-success\"\n                        onClick={() => updateTaskStatus(task.id)}\n                      >\n                        Mark as Complete\n                      </button>\n                    ) : (\n                      <span>Completed</span>\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\" className=\"text-center\">\n                  No tasks available\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ListTasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}