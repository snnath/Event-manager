{"ast":null,"code":"var _jsxFileName = \"/Users/sohannath/Developer/Event-manager/client/src/components/AttendeeManagement.js\";\nimport React, { Fragment, useState, useEffect } from \"react\";\nconst InputAttendee = () => {\n  const [name, setAttendeeName] = useState(\"\");\n  const [task, setAttendeeTask] = useState(\"\");\n  const [event_id, setEventId] = useState(\"\"); // Ensure correct variable name for event ID\n  const [events, setEvents] = useState([]); // Store events fetched from the backend\n\n  // Fetch events from the backend\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/events\"); // Adjust this endpoint if needed\n        if (!response.ok) throw new Error(\"Failed to fetch events\");\n        const data = await response.json();\n        console.log(\"Fetched Events:\", data); // Debugging log\n        setEvents(data); // Store the events\n      } catch (err) {\n        console.error(\"Error fetching events:\", err);\n      }\n    };\n    fetchEvents();\n  }, []);\n  const onSubmitForm = async e => {\n    e.preventDefault();\n    try {\n      const body = {\n        name,\n        task,\n        event_id\n      }; // Ensure correct data is being sent\n      const response = await fetch(\"http://localhost:4000/attendees/\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(body)\n      });\n      if (!response.ok) throw new Error(\"Failed to add attendee\");\n      console.log(\"Attendee added successfully:\", await response.json());\n\n      // Refresh page after adding attendee\n      window.location = \"/\";\n    } catch (err) {\n      console.error(\"Error adding attendee:\", err);\n    }\n  };\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, \"Attendee Management\"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"d-flex flex-column mt-5\",\n    onSubmit: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Attendee Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    className: \"form-control\",\n    value: name,\n    onChange: e => setAttendeeName(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"task\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Assigned Task\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"task\",\n    className: \"form-control\",\n    value: task,\n    onChange: e => setAttendeeTask(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"event_id\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, \"Select Event\"), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"event_id\",\n    className: \"form-control\",\n    value: event_id,\n    onChange: e => setEventId(e.target.value),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Select Event\"), events.length > 0 ? events.map(event => /*#__PURE__*/React.createElement(\"option\", {\n    key: event.id,\n    value: event.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 17\n    }\n  }, event.name)) : /*#__PURE__*/React.createElement(\"option\", {\n    disabled: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }, \"No Events Available\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"Add Attendee\")));\n};\nexport default InputAttendee;","map":{"version":3,"names":["React","Fragment","useState","useEffect","InputAttendee","name","setAttendeeName","task","setAttendeeTask","event_id","setEventId","events","setEvents","fetchEvents","response","fetch","ok","Error","data","json","console","log","err","error","onSubmitForm","e","preventDefault","body","method","headers","JSON","stringify","window","location","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","onSubmit","htmlFor","type","id","value","onChange","target","required","length","map","event","key","disabled"],"sources":["/Users/sohannath/Developer/Event-manager/client/src/components/AttendeeManagement.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\n\nconst InputAttendee = () => {\n  const [name, setAttendeeName] = useState(\"\");\n  const [task, setAttendeeTask] = useState(\"\");\n  const [event_id, setEventId] = useState(\"\"); // Ensure correct variable name for event ID\n  const [events, setEvents] = useState([]); // Store events fetched from the backend\n\n  // Fetch events from the backend\n  useEffect(() => {\n    const fetchEvents = async () => {\n      try {\n        const response = await fetch(\"http://localhost:4000/events\"); // Adjust this endpoint if needed\n        if (!response.ok) throw new Error(\"Failed to fetch events\");\n        const data = await response.json();\n        console.log(\"Fetched Events:\", data); // Debugging log\n        setEvents(data); // Store the events\n      } catch (err) {\n        console.error(\"Error fetching events:\", err);\n      }\n    };\n    fetchEvents();\n  }, []);\n\n  const onSubmitForm = async (e) => {\n    e.preventDefault();\n    try {\n      const body = { name, task, event_id }; // Ensure correct data is being sent\n      const response = await fetch(\"http://localhost:4000/attendees/\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify(body),\n      });\n\n      if (!response.ok) throw new Error(\"Failed to add attendee\");\n      console.log(\"Attendee added successfully:\", await response.json());\n\n      // Refresh page after adding attendee\n      window.location = \"/\";\n    } catch (err) {\n      console.error(\"Error adding attendee:\", err);\n    }\n  };\n\n  return (\n    <Fragment>\n      <h1 className=\"text-center mt-5\">Attendee Management</h1>\n      <form className=\"d-flex flex-column mt-5\" onSubmit={onSubmitForm}>\n        <div className=\"mb-3\">\n          <label htmlFor=\"name\" className=\"form-label\">\n            Attendee Name\n          </label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            className=\"form-control\"\n            value={name}\n            onChange={(e) => setAttendeeName(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"task\" className=\"form-label\">\n            Assigned Task\n          </label>\n          <input\n            type=\"text\"\n            id=\"task\"\n            className=\"form-control\"\n            value={task}\n            onChange={(e) => setAttendeeTask(e.target.value)}\n            required\n          />\n        </div>\n        <div className=\"mb-3\">\n          <label htmlFor=\"event_id\" className=\"form-label\">\n            Select Event\n          </label>\n          <select\n            id=\"event_id\"\n            className=\"form-control\"\n            value={event_id}\n            onChange={(e) => setEventId(e.target.value)}\n            required\n          >\n            <option value=\"\">Select Event</option>\n            {events.length > 0 ? (\n              events.map((event) => (\n                <option key={event.id} value={event.id}>\n                  {event.name}\n                </option>\n              ))\n            ) : (\n              <option disabled>No Events Available</option>\n            )}\n          </select>\n        </div>\n        <button className=\"btn btn-success\">Add Attendee</button>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default InputAttendee;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}