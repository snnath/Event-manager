{"ast":null,"code":"var _jsxFileName = \"/Users/sohannath/Developer/Event-manager/client/src/components/ListTasks.js\";\nimport React, { Fragment, useEffect, useState } from \"react\";\nconst ListTasks = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all tasks from the backend\n  const getTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/tasks\");\n      const jsonData = await response.json();\n\n      // Check if tasks exist in the response\n      if (jsonData.tasks) {\n        setTasks(jsonData.tasks);\n      } else {\n        console.error(\"Error fetching tasks:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err.message);\n    }\n  };\n  useEffect(() => {\n    getTasks(); // Fetch tasks on component mount\n  }, []);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, \"List of Tasks\"), /*#__PURE__*/React.createElement(\"table\", {\n    className: \"table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 15\n    }\n  }, \"Task Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 15\n    }\n  }, \"Description\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"Event\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 15\n    }\n  }, \"Assigned To\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 15\n    }\n  }, \"Status\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }, \"Update Status\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, tasks.length > 0 ? tasks.map(task => /*#__PURE__*/React.createElement(\"tr\", {\n    key: task.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 19\n    }\n  }, task.name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 19\n    }\n  }, task.description), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }, task.event_name || \"No Event\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }, task.attendee_name || \"No Attendee\"), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }\n  }, task.status), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 19\n    }\n  }, task.status === \"Pending\" ? /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-success\",\n    onClick: () => updateTaskStatus(task.id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 23\n    }\n  }, \"Mark as Complete\") : /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 23\n    }\n  }, \"Completed\")))) : /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    colSpan: \"6\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }, \"No tasks available\"))))));\n};\nexport default ListTasks;","map":{"version":3,"names":["React","Fragment","useEffect","useState","ListTasks","tasks","setTasks","getTasks","response","fetch","jsonData","json","console","error","err","message","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","task","key","id","name","description","event_name","attendee_name","status","onClick","updateTaskStatus","colSpan"],"sources":["/Users/sohannath/Developer/Event-manager/client/src/components/ListTasks.js"],"sourcesContent":["import React, { Fragment, useEffect, useState } from \"react\";\n\nconst ListTasks = () => {\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch all tasks from the backend\n  const getTasks = async () => {\n    try {\n      const response = await fetch(\"http://localhost:4000/tasks\");\n      const jsonData = await response.json();\n\n      // Check if tasks exist in the response\n      if (jsonData.tasks) {\n        setTasks(jsonData.tasks);\n      } else {\n        console.error(\"Error fetching tasks:\", jsonData.error);\n      }\n    } catch (err) {\n      console.error(\"Error fetching tasks:\", err.message);\n    }\n  };\n\n  useEffect(() => {\n    getTasks(); // Fetch tasks on component mount\n  }, []);\n\n  return (\n    <Fragment>\n      <div className=\"container\">\n        <h2 className=\"text-center mt-5\">List of Tasks</h2>\n\n        <table className=\"table\">\n          <thead>\n            <tr>\n              <th>Task Name</th>\n              <th>Description</th>\n              <th>Event</th>\n              <th>Assigned To</th>\n              <th>Status</th>\n              <th>Update Status</th>\n            </tr>\n          </thead>\n          <tbody>\n            {tasks.length > 0 ? (\n              tasks.map((task) => (\n                <tr key={task.id}>\n                  <td>{task.name}</td>\n                  <td>{task.description}</td>\n                  <td>{task.event_name || \"No Event\"}</td>\n                  <td>{task.attendee_name || \"No Attendee\"}</td>\n                  <td>{task.status}</td>\n                  <td>\n                    {task.status === \"Pending\" ? (\n                      <button\n                        className=\"btn btn-success\"\n                        onClick={() => updateTaskStatus(task.id)}\n                      >\n                        Mark as Complete\n                      </button>\n                    ) : (\n                      <span>Completed</span>\n                    )}\n                  </td>\n                </tr>\n              ))\n            ) : (\n              <tr>\n                <td colSpan=\"6\" className=\"text-center\">\n                  No tasks available\n                </td>\n              </tr>\n            )}\n          </tbody>\n        </table>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default ListTasks;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}