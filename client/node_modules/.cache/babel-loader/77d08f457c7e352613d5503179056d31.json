{"ast":null,"code":"var _jsxFileName = \"/Users/sohannath/Developer/Event-manager/client/src/App.js\";\nimport React, { useEffect, useState } from \"react\";\nimport CreateEvent from \"./components/createEvent\";\nimport ListEvent from \"./components/listEvent\";\nimport AttendeeManagement from \"./components/AttendeeManagement\";\nimport ListAttendees from \"./components/ListAttendees\";\nimport TaskTracker from \"./components/TaskTracker\";\nfunction App() {\n  const [page, setPage] = useState(\"\");\n\n  // Detect the page based on URL path\n  useEffect(() => {\n    const currentPath = window.location.pathname;\n    if (currentPath === \"/events\") {\n      setPage(\"events\");\n    } else if (currentPath === \"/attendees\") {\n      setPage(\"attendees\");\n    } else if (currentPath === \"/tasks\") {\n      setPage(\"tasks\");\n    } else {\n      setPage(\"home\");\n    }\n  }, []);\n\n  // Handle Navigation to different pages\n  const navigateToPage = path => {\n    window.history.pushState(null, \"\", path); // Change URL without reload\n    setPage(path.substring(1)); // Update page state based on path\n    window.location.reload(); // Force reload to render the new page content\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, \"Event Management Dashboard\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"mt-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToPage(\"/events\"),\n    className: \"btn btn-primary m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, \"Go to Events\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToPage(\"/attendees\"),\n    className: \"btn btn-primary m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Go to Attendees\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => navigateToPage(\"/tasks\"),\n    className: \"btn btn-primary m-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  }, \"Go to Task Manager\"))), page === \"home\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-center mt-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, \"Welcome to the Event Management Dashboard\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Please choose an option above.\")), page === \"events\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CreateEvent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListEvent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 11\n    }\n  })), page === \"attendees\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AttendeeManagement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(ListAttendees, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  })), page === \"tasks\" && /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TaskTracker, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  })));\n}\nexport default App;","map":{"version":3,"names":["React","useEffect","useState","CreateEvent","ListEvent","AttendeeManagement","ListAttendees","TaskTracker","App","page","setPage","currentPath","window","location","pathname","navigateToPage","path","history","pushState","substring","reload","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick"],"sources":["/Users/sohannath/Developer/Event-manager/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport CreateEvent from \"./components/createEvent\";\nimport ListEvent from \"./components/listEvent\";\nimport AttendeeManagement from \"./components/AttendeeManagement\";\nimport ListAttendees from \"./components/ListAttendees\";\nimport TaskTracker from \"./components/TaskTracker\";\n\nfunction App() {\n  const [page, setPage] = useState(\"\");\n\n  // Detect the page based on URL path\n  useEffect(() => {\n    const currentPath = window.location.pathname;\n    if (currentPath === \"/events\") {\n      setPage(\"events\");\n    } else if (currentPath === \"/attendees\") {\n      setPage(\"attendees\");\n    } else if (currentPath === \"/tasks\") {\n      setPage(\"tasks\");\n    } else {\n      setPage(\"home\");\n    }\n  }, []);\n\n  // Handle Navigation to different pages\n  const navigateToPage = (path) => {\n    window.history.pushState(null, \"\", path); // Change URL without reload\n    setPage(path.substring(1)); // Update page state based on path\n    window.location.reload(); // Force reload to render the new page content\n  };\n\n  return (\n    <div className=\"container\">\n      {/* Navigation Links */}\n      <div className=\"text-center mt-5\">\n        <h1>Event Management Dashboard</h1>\n        <div className=\"mt-4\">\n          <button\n            onClick={() => navigateToPage(\"/events\")}\n            className=\"btn btn-primary m-2\"\n          >\n            Go to Events\n          </button>\n          <button\n            onClick={() => navigateToPage(\"/attendees\")}\n            className=\"btn btn-primary m-2\"\n          >\n            Go to Attendees\n          </button>\n          <button\n            onClick={() => navigateToPage(\"/tasks\")}\n            className=\"btn btn-primary m-2\"\n          >\n            Go to Task Manager\n          </button>\n        </div>\n      </div>\n\n      {/* Conditional Page Rendering */}\n      {page === \"home\" && (\n        <div className=\"text-center mt-5\">\n          <h2>Welcome to the Event Management Dashboard</h2>\n          <p>Please choose an option above.</p>\n        </div>\n      )}\n\n      {page === \"events\" && (\n        <div>\n          <CreateEvent />\n          <ListEvent />\n        </div>\n      )}\n\n      {page === \"attendees\" && (\n        <div>\n          <AttendeeManagement />\n          <ListAttendees />\n        </div>\n      )}\n      {page === \"tasks\" && (\n        <div>\n          <TaskTracker />\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}